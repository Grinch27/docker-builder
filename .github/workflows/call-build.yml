name: Call Build (Dev)

# https://docs.github.com/zh/actions/writing-workflows/workflow-syntax-for-github-actions
run-name: Build Matrix for Docker

on:
  schedule:
    # Run every day at 00:00 UTC
    - cron: "0 0 * * *"
  repository_dispatch:
  workflow_dispatch:

# permissions: {}
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

jobs:
  docker:
    name: ${{ matrix.workflows_inputs.app_branch }}
    # continue-on-error: true
    # concurrency:
    #   group: example-group
    #   cancel-in-progress: true
    uses: ./.github/workflows/build-docker.yml
    # secrets: inherit
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        runner_image: ["ubuntu-24.04"]
        workflows_inputs:
          - app_branch: "cloudflare-warp"
            tag_repo: "latest"
          - app_branch: "adguardvpn-cli"
            tag_repo: "nightly"
            custom_env: "build_arg='update_channel=nightly'"
          - app_branch: "adguardvpn-cli"
            tag_repo: "beta"
            custom_env: "build_arg='update_channel=beta'"
          - app_branch: "adguardvpn-cli"
            tag_repo: "release"
            custom_env: "build_arg='update_channel=release'"
          - app_branch: "expressvpn"
            tag_repo: "latest"
          - app_branch: "nordvpn"
            tag_repo: "latest"
          - app_branch: "squid"
            tag_repo: "latest"
          - app_branch: "vlmcsd"
            tag_repo: "latest"
          - app_branch: "novnc"
            tag_repo: "latest"
          - app_branch: "baidunetdisk"
            tag_repo: "dev"
          - app_branch: "steamcmd"
            tag_repo: "dev"
          # runner
          - app_branch: "runner"
            tag_repo: "dev"
          - app_branch: "runner"
            tag_repo: "slim"
            custom_env: "dockerfile=slim.Dockerfile"
          - app_branch: "runner"
            tag_repo: "actions"
            custom_env: "dockerfile=actions.Dockerfile"
          - app_branch: "runner"
            tag_repo: "actions-slim"
            custom_env: "dockerfile=actions-slim.Dockerfile"
          # openwrt
          - app_branch: "openwrt"
            tag_repo: "main"
          # privoxy
          - app_branch: "privoxy"
            tag_repo: "latest"
          # aria2
          - app_branch: "aria2"
            tag_repo: "latest"
          # samba
          - app_branch: "samba"
            tag_repo: "latest"
            # custom_env: "dockerfile=slim.Dockerfile"
          - app_branch: "samba"
            tag_repo: "alpine"
            custom_env: "dockerfile=alpine.Dockerfile"
          # dnscrypt-proxy
          - app_branch: "dnscrypt-proxy"
            tag_repo: "latest"
    with:
      runner_image: ${{ matrix.runner_image }} # || 'ubuntu-24.04'
      app_branch: ${{ matrix.workflows_inputs.app_branch }}
      tag_repo: ${{ matrix.workflows_inputs.tag_repo }}
      force_push: ${{ matrix.workflows_inputs.force_push || 'false' }}
      custom_env: ${{ matrix.workflows_inputs.custom_env || '' }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
