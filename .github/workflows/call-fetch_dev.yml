name: Fetch (Dev)

run-name: Fetch Matrix for Docker

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  fetch:
    uses: ./.github/workflows/callable-fetch-layers.yml
    strategy:
      fail-fast: false
      matrix:
        image_name:
          [
            "debian:latest",
            "ubuntu:latest",
            "alpine:latest",
            "debian:sid",
            "ubuntu:devel",
          ]
    with:
      image_name: ${{ matrix.image_name }}

  collect:
    name: Collect Layers
    needs: fetch
    runs-on: ubuntu-latest
    outputs:
      FILE_LAYERS: ${{ steps.combine-merge.outputs.FILE_LAYERS }}
    steps:
      - name: Download all layer artifacts
        uses: actions/download-artifact@main
        with:
          path: /tmp/layer-artifacts

      - name: Check json file
        id: json-check
        run: |
          set -e
          for f in /tmp/layer-artifacts/layers-*/layer-*.json; do
            echo "Checking $f"
            jq . "$f" >/dev/null || { echo "Invalid JSON in $f"; exit 1; }
          done

      - name: Combine & Merge Layers
        id: combine-merge
        env:
          FILE_LAYERS: /tmp/base_layers.json
        run: |
          set -euo pipefail
          outfile=/tmp/aggregated_layers.json
          tmp=$(mktemp)
          shopt -s nullglob
          for f in /tmp/layer-artifacts/layers-*/layer-*.json; do
            jq -r '.Layers[]?' "$f" >> "$tmp"
          done
          if [ ! -s "$tmp" ]; then
            echo '{"Layers":[]}' > "$outfile"
          else
            sort -u "$tmp" | jq -R -s '{Layers:(split("\n")[:-1])}' > "$outfile"
          fi
          echo "FILE_LAYERS=$outfile" >> "$GITHUB_OUTPUT"
          echo "Layer total:"
          jq '.Layers|length as $n | {Total:$n}' "$outfile"
          # 预览前若干
          jq '.Layers' "$outfile" || true
          done
          echo "$base_layers" | jq . > ${{ env.FILE_LAYERS }}
          echo "Per-image layers saved to ${{ env.FILE_LAYERS }}"
          # 只输出文件名而非大 JSON
          echo "FILE_LAYERS=${{ env.FILE_LAYERS }}" >> "$GITHUB_OUTPUT"

      # - name: Merge All Layers
      #   id: merge-all
      #   env:
      #     FILE_LAYERS: ${{ steps.json-combine.outputs.FILE_LAYERS }}
      #   run: |
      #     set -e
      #     [ -f "$FILE_LAYERS" ] || { echo "File $FILE_LAYERS not found"; exit 1; }
      #     # 汇总所有镜像的 Layers，去重。允许缺失某些对象的 Layers 字段
      #     jq '{Layers: ([ .[]? | .Layers?[] ] | unique)}' "$FILE_LAYERS" > aggregated_layers.json
      #     echo "Aggregated unified layers (deduplicated):"
      #     jq '. | {Total: (.Layers|length)}' aggregated_layers.json
      #     jq . aggregated_layers.json
      #     echo "aggregated_layers_file=aggregated_layers.json" >> "$GITHUB_OUTPUT"
